@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using Blazor.AppTest.Data
@inject WeatherForecastService ForecastService

@implements IDisposable

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

<h5>Search Summary</h5>
<Search OnSearchChanged="SearchData" />

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
    <div class="spinner"></div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? originForecasts;
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // 데이터 비동기 처리
        await Task.Run(LoadData);
    }

    private async void LoadData()
    {
        // Test Sleep
        System.Threading.Thread.Sleep(2000);
        originForecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        forecasts = originForecasts.ToArray();
    }

    private void SearchData(string searchText)
    {
        forecasts = originForecasts?.Where(c => c.Summary.ToUpper().Contains(searchText.ToUpper())).ToArray();
    }

    // IDisposable 처리
    public void Dispose()
    {
        originForecasts = null;
    }
}
